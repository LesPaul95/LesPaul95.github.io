{"version":3,"sources":["components/Tabs/NowPlaying/components/NowPlayingInfoTable.jsx","components/Tabs/NowPlaying/index.jsx","actions/tmdbActions.js","components/Tabs/RandomMovie/components/MultipleGenresList.jsx","components/Tabs/RandomMovie/components/MovieInfoCard.jsx","components/Tabs/RandomMovie/components/YearRange.jsx","components/Tabs/RandomMovie/components/VoteRange.jsx","components/Tabs/RandomMovie/RandomMovie.jsx","components/Tabs/RandomMovie/RandomMovieController.jsx","components/Header/index.jsx","components/App/index.jsx","stores/DictionariesStore.js","stores/MoviesStore.js","index.jsx"],"names":["NowPlayingInfoTable","props","react","Table","TableBody","results","map","row","TableRow","key","id","TableCell","src","concat","poster_path","alt","height","component","scope","title","overview","moment","release_date","format","vote_average","NowPlaying","inject","_dec","_class","observer","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","handleChangePage","_","pageNumber","moviesStore","getNowPlayingMovies","inherits","createClass","value","get","nowPlayingMovies","Container","Typography","style","padding","status","Paper","NowPlayingInfoTable_NowPlayingInfoTable","TablePagination","rowsPerPageOptions","count","total_results","rowsPerPage","page","backIconButtonProps","aria-label","nextIconButtonProps","onChangePage","React","themoviedbUri","getNowPlaying","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","_ref2","data","wrap","_context","prev","next","console","log","axios","sent","abrupt","objectSpread","stop","_x","getRandomMoviesList","_ref3","_callee2","yearRange","voteRange","genres","_ref4","firstStatus","firstData","_ref5","_args2","_context2","undefined","random","total_pages","t0","_x2","_x3","getGenresList","_ref6","_callee3","_ref7","_context3","getMovieCastAndCrew","_ref8","_callee4","movieId","_ref9","_context4","_x4","useStyles","makeStyles","theme","root","display","flexWrap","formControl","margin","spacing","minWidth","width","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","MultipleGenresList","selectedGenres","setSelectedGenres","classes","react_default","createElement","className","FormControl","InputLabel","htmlFor","Select","multiple","onChange","event","target","input","Input","renderValue","selected","join","MenuItem","name","Checkbox","checked","indexOf","ListItemText","primary","card","flexDirection","media","info","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","MovieInfoCard","movie","getGenresNamesByIds","cast","_React$useState","useState","_React$useState2","slicedToArray","expanded","setExpanded","Fragment","Card","CardMedia","image","CardHeader","Avatar","subheader","CardContent","variant","color","genre_ids","man","index","CardActions","disableSpacing","IconButton","clsx","defineProperty","onClick","aria-expanded","ExpandMore_default","Grid","container","justify","item","xs","Collapse","in","timeout","unmountOnExit","paragraph","YearRange","handleYearRangeChange","minYear","maxYear","marks","label","gutterBottom","Slider","valueLabelDisplay","aria-labelledby","min","max","VoteRange","setVoteRange","newValue","currentYear","Date","getFullYear","alignItems","wrapper","position","buttonSuccess","green","&:hover","fabProgress","top","left","zIndex","buttonProgress","right","marginTop","RandomMovie","getGenresIdsByNames","_useState","_useState2","isLoading","setIsLoading","_useState3","_useState4","setYearRange","_useState5","_useState6","_useState7","_useState8","randomMovie","setRandomMovie","handleFindMovie","genresIds","randomMovieResponse","castAndCrew","useEffect","_findFirstRandomMovie","findFirstRandomMovie","Button","fullWidth","disabled","CircularProgress","size","RandomMovieController","RandomMovieController_dec","RandomMovieController_class","_this$props$dictionar","dictionariesStore","styles","paperContainer","flexGrow","palette","background","paper","routesToTabs","freeze","/","/random-movie","ScrollableTabsButtonAuto","withRouter","location","pathname","setValue","AppBar","Tabs","indicatorColor","textColor","scrollButtons","centered","Tab","Link","to","react_router","exact","path","App","App_dec","App_class","_dec2","fetchGenres","mobx_react_devtools_default","DictionariesStore","initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","observable","action","genresResponse","setGenres","sortBy","tmdbGenres","_this2","genresNames","gName","find","_this3","gId","_this4","MoviesStore","MoviesStore_descriptor","MoviesStore_descriptor2","MoviesStore_descriptor3","movies","_args","setNowPlayingMovies","nowPlaying","ReactDOM","render","index_module","stores","react_router_dom","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.5c328309.chunk.js","sourcesContent":["import * as React from 'react';\nimport moment from 'moment';\nimport {\n  Table, TableBody, TableCell, TableRow,\n} from '@material-ui/core/';\n\nexport const NowPlayingInfoTable = props => (\n  <Table>\n    <TableBody>\n      {props.results.map(row => (\n        <TableRow key={row.id}>\n          <TableCell><img src={`https://image.tmdb.org/t/p/w500${row.poster_path}`} alt=\"\" height=\"240px\" /></TableCell>\n          <TableCell component=\"th\" scope=\"row\">\n            {row.title}\n          </TableCell>\n          <TableCell>{row.overview}</TableCell>\n          <TableCell>{moment(row.release_date).format('DD.MM.YYYY')}</TableCell>\n          <TableCell>{row.vote_average}</TableCell>\n        </TableRow>\n      ))}\n    </TableBody>\n  </Table>\n);\n","// Tab on MobX\nimport * as React from 'react';\nimport { get } from 'lodash';\nimport { observer, inject } from 'mobx-react';\nimport {\n  Paper,\n  TablePagination,\n  Container,\n  Typography,\n} from '@material-ui/core/';\nimport { NowPlayingInfoTable } from './components/NowPlayingInfoTable';\n\n@inject('moviesStore')\n@observer\nexport class NowPlaying extends React.Component {\n  componentDidMount() {\n    const { moviesStore } = this.props;\n    if (get(moviesStore, 'nowPlayingMovies.status') !== 200) {\n      moviesStore.getNowPlayingMovies();\n    }\n  }\n\n  handleChangePage = (_, pageNumber) => {\n    const { moviesStore } = this.props;\n    moviesStore.getNowPlayingMovies(pageNumber + 1);\n  };\n\n  render() {\n    const { moviesStore: { nowPlayingMovies } } = this.props;\n    return (\n      <Container>\n        <Typography component=\"div\" style={{ padding: 8 * 3 }}>\n          {nowPlayingMovies.status === 200 && (\n            <Paper>\n              <NowPlayingInfoTable results={nowPlayingMovies.results} />\n              <TablePagination\n                component=\"div\"\n                rowsPerPageOptions={[0]}\n                count={nowPlayingMovies.total_results}\n                rowsPerPage={nowPlayingMovies.results.length}\n                page={nowPlayingMovies.page - 1}\n                backIconButtonProps={{\n                  'aria-label': 'Previous Page',\n                }}\n                nextIconButtonProps={{\n                  'aria-label': 'Next Page',\n                }}\n                onChangePage={this.handleChangePage}\n              />\n            </Paper>\n          )}\n        </Typography>\n      </Container>\n    );\n  }\n}\n","import axios from 'axios';\nimport { random } from 'lodash';\n\nconst themoviedbUri = 'https://api.themoviedb.org/3';\n\nexport const getNowPlaying = async (page) => {\n  console.log('getNowPlayingMovies');\n  const { status, data } = await axios.get(\n    `${themoviedbUri}/movie/now_playing?api_key=440220d48afb156283f60fe68cbb2920&language=ru-RU&page=${page}`,\n  );\n  return { status, ...data };\n};\n\nexport const getRandomMoviesList = async (yearRange, voteRange, genres = '') => {\n  try {\n    console.log('getRandomMoviesList');\n    const { status: firstStatus, data: firstData } = await axios.get(\n      `${themoviedbUri}/discover/movie?api_key=440220d48afb156283f60fe68cbb2920&language=ru-RU\n      &include_adult=true&page=${random(1, 1000)}&release_date.gte=${yearRange[0]}&release_date.lte=${yearRange[1]}\n      &vote_average.gte=${voteRange[0]}&vote_average.lte=${voteRange[1]}&with_genres=${genres}`,\n    );\n    console.log(firstStatus, firstData);\n\n    if (firstData.page > firstData.total_pages) {\n      const { status, data } = await axios.get(\n        `${themoviedbUri}/discover/movie?api_key=440220d48afb156283f60fe68cbb2920&language=ru-RU\n        &include_adult=true&page=${random(1, firstData.total_pages)}&release_date.gte=${yearRange[0]}&release_date.lte=${yearRange[1]}\n        &vote_average.gte=${voteRange[0]}&vote_average.lte=${voteRange[1]}&with_genres=${genres}`,\n      );\n      console.log(status, data);\n      return { status: firstStatus, ...data };\n    }\n\n    return { status: firstStatus, ...firstData };\n  } catch (e) {\n    console.log(e);\n    return e;\n  }\n};\n\nexport const getGenresList = async () => {\n  console.log('getGenresList');\n  const { status, data } = await axios.get(\n    `${themoviedbUri}/genre/movie/list?api_key=440220d48afb156283f60fe68cbb2920&language=ru-RU`,\n  );\n  console.log({ status, data });\n  return { status, ...data };\n};\n\nexport const getMovieCastAndCrew = async (movieId) => {\n  console.log('getMovieActorsAndCrew');\n  const { data } = await axios.get(\n    `${themoviedbUri}/movie/${movieId}/credits?api_key=440220d48afb156283f60fe68cbb2920`,\n  );\n  console.log(data);\n  return data;\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 30,\n    width: '100%',\n  },\n}));\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nexport function MultipleGenresList({ genres, selectedGenres, setSelectedGenres }) {\n  const classes = useStyles();\n\n  function handleChange(event) {\n    setSelectedGenres(event.target.value);\n  }\n\n  return (\n    <div className={classes.root}>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor=\"select-multiple-checkbox\">Жанры</InputLabel>\n        <Select\n          multiple\n          value={selectedGenres}\n          onChange={handleChange}\n          input={<Input id=\"select-multiple-checkbox\" />}\n          renderValue={selected => selected.join(', ')}\n          MenuProps={MenuProps}\n        >\n          {genres.map(selected => (\n            <MenuItem key={selected.name} value={selected.name}>\n              <Checkbox checked={selectedGenres.indexOf(selected.name) > -1} />\n              <ListItemText primary={selected.name} />\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n","import React from 'react';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Grid } from '@material-ui/core/';\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    height: 'auto',\n    display: 'flex',\n    flexDirection: 'row',\n  },\n  media: {\n    width: '50%',\n    height: '570px',\n\n  },\n  info: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '50%',\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\n\nexport function MovieInfoCard({ movie, getGenresNamesByIds }) {\n  const classes = useStyles();\n  const cast = movie.cast || [];\n  const [expanded, setExpanded] = React.useState(false);\n\n  function handleExpandClick() {\n    setExpanded(!expanded);\n  }\n\n  return (\n    <>\n      <Card className={classes.card}>\n        <CardMedia\n          className={classes.media}\n          image={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n          title={movie.title}\n        />\n        <div className={classes.info}>\n          <CardHeader\n            avatar={\n              <Avatar className={classes.avatar}>{movie.vote_average}</Avatar>\n            }\n            title={movie.title}\n            subheader={moment(movie.release_date).format('DD.MM.YYYY')}\n          />\n          <CardContent>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              {getGenresNamesByIds(movie.genre_ids)}\n            </Typography>\n          </CardContent>\n          <CardContent>\n            {cast.map(\n              (man, index) => index < 15 && (\n              <Typography\n                variant=\"body2\"\n                color=\"textSecondary\"\n                component=\"p\"\n                key={man.id}\n              >\n                {man.name}\n              </Typography>\n              ),\n            )}\n          </CardContent>\n          <CardActions disableSpacing>\n            <IconButton\n              className={clsx(classes.expand, {\n                [classes.expandOpen]: expanded,\n              })}\n              onClick={handleExpandClick}\n              aria-expanded={expanded}\n              aria-label=\"Show more\"\n            >\n              <ExpandMoreIcon />\n            </IconButton>\n          </CardActions>\n        </div>\n      </Card>\n      <Grid container spacing={5} justify=\"center\">\n        <Grid item xs={12}>\n          <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n            <CardContent>\n              <Typography paragraph>{movie.overview}</Typography>\n            </CardContent>\n          </Collapse>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/lab/Slider';\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    margin: 'auto',\n  },\n});\n\nexport function YearRange({\n  yearRange, handleYearRangeChange, minYear, maxYear,\n}) {\n  const classes = useStyles();\n  const marks = [\n    {\n      value: minYear,\n      label: minYear,\n    },\n    {\n      value: maxYear,\n      label: maxYear,\n    },\n  ];\n\n  return (\n    <div className={classes.root}>\n      <Typography id=\"range-slider\" gutterBottom>\n        Год издания\n      </Typography>\n      <Slider\n        value={yearRange}\n        onChange={handleYearRangeChange}\n        valueLabelDisplay=\"auto\"\n        aria-labelledby=\"range-slider\"\n        min={minYear}\n        max={maxYear}\n        marks={marks}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/lab/Slider';\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    margin: 'auto',\n  },\n});\n\nexport function VoteRange({ voteRange, setVoteRange }) {\n  const classes = useStyles();\n  const marks = [\n    {\n      value: 0,\n      label: 0,\n    },\n    {\n      value: 1,\n      label: 1,\n    },\n    {\n      value: 2,\n      label: 2,\n    },\n    {\n      value: 3,\n      label: 3,\n    },\n    {\n      value: 4,\n      label: 4,\n    },\n    {\n      value: 5,\n      label: 5,\n    },\n    {\n      value: 6,\n      label: 6,\n    },\n    {\n      value: 7,\n      label: 7,\n    },\n    {\n      value: 8,\n      label: 8,\n    },\n    {\n      value: 9,\n      label: 9,\n    },\n    {\n      value: 10,\n      label: 10,\n    },\n  ];\n\n  const handleChange = (event, newValue) => {\n    setVoteRange(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Typography id=\"range-slider\" gutterBottom>\n        Оценка\n      </Typography>\n      <Slider\n        value={voteRange}\n        onChange={handleChange}\n        valueLabelDisplay=\"auto\"\n        aria-labelledby=\"range-slider\"\n        min={0}\n        max={10}\n        marks={marks}\n      />\n    </div>\n  );\n}\n","// Tab on React Hooks\nimport React, { useState, useEffect } from 'react';\nimport { random } from 'lodash';\nimport {\n  Button, Container, Grid, Typography, CircularProgress, makeStyles,\n} from '@material-ui/core';\nimport { green } from '@material-ui/core/colors';\nimport { getRandomMoviesList, getMovieCastAndCrew } from '../../../actions';\nimport { MultipleGenresList } from './components/MultipleGenresList';\nimport { MovieInfoCard } from './components/MovieInfoCard';\nimport { YearRange } from './components/YearRange';\nimport { VoteRange } from './components/VoteRange';\n\nfunction getCurrentYear() {\n  const date = new Date();\n  return date.getFullYear();\n}\n\nconst minYear = 1970;\nconst currentYear = getCurrentYear();\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  wrapper: {\n    margin: theme.spacing(1),\n    position: 'relative',\n  },\n  buttonSuccess: {\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700],\n    },\n  },\n  fabProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: -6,\n    left: -6,\n    zIndex: 1,\n  },\n  buttonProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: '50%',\n    right: '5px',\n    marginTop: -12,\n    marginLeft: -12,\n  },\n}));\n\nexport function RandomMovie({ genres, getGenresIdsByNames, getGenresNamesByIds }) {\n  const classes = useStyles();\n  const [selectedGenres, setSelectedGenres] = useState([]);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [yearRange, setYearRange] = useState([minYear, currentYear]);\n  const [voteRange, setVoteRange] = useState([0, 10]);\n  const [randomMovie, setRandomMovie] = useState(null);\n\n  const handleFindMovie = async () => {\n    setIsLoading(true);\n    const genresIds = getGenresIdsByNames(selectedGenres);\n    const { results } = await getRandomMoviesList(yearRange, voteRange, genresIds);\n    const randomMovieResponse = results[random(0, results.length - 1)];\n    const castAndCrew = await getMovieCastAndCrew(randomMovieResponse.id);\n    console.log({ ...randomMovieResponse, ...castAndCrew });\n    setRandomMovie({ ...randomMovieResponse, ...castAndCrew });\n    setIsLoading(false);\n  };\n\n  const handleYearRangeChange = (event, newValue) => {\n    setYearRange(newValue);\n  };\n\n  useEffect(() => {\n    async function findFirstRandomMovie() {\n      await handleFindMovie();\n    }\n    findFirstRandomMovie();\n  }, []);\n\n  return (\n    <Container>\n      <Typography component=\"div\" style={{ padding: 8 * 3 }}>\n        <Grid container spacing={10} justify=\"center\">\n          <Grid item xs={5}>\n            <MultipleGenresList\n              genres={genres}\n              selectedGenres={selectedGenres}\n              setSelectedGenres={setSelectedGenres}\n            />\n          </Grid>\n          <Grid item xs={5}>\n            <VoteRange voteRange={voteRange} setVoteRange={setVoteRange} />\n          </Grid>\n        </Grid>\n        <Grid container spacing={5} justify=\"center\">\n          <Grid item xs={10}>\n            <YearRange\n              yearRange={yearRange}\n              handleYearRangeChange={handleYearRangeChange}\n              minYear={minYear}\n              maxYear={currentYear}\n            />\n          </Grid>\n        </Grid>\n        <Grid container spacing={5} justify=\"center\">\n          <Grid item xs={8}>\n            <div className={classes.wrapper}>\n              <Button\n                fullWidth\n                color=\"secondary\"\n                variant=\"contained\"\n                onClick={handleFindMovie}\n                disabled={isLoading}\n              >\n                НАЙТИ\n              </Button>\n              {isLoading && (\n                <CircularProgress\n                  size={24}\n                  className={classes.buttonProgress}\n                />\n              )}\n            </div>\n          </Grid>\n        </Grid>\n        {randomMovie && (\n          <Grid container spacing={5} justify=\"center\">\n            <Grid item xs={8}>\n              <MovieInfoCard\n                movie={randomMovie}\n                getGenresNamesByIds={getGenresNamesByIds}\n              />\n            </Grid>\n          </Grid>\n        )}\n      </Typography>\n    </Container>\n  );\n}\n","// Tab on MobX\nimport * as React from 'react';\nimport { observer, inject } from 'mobx-react';\nimport { RandomMovie } from './RandomMovie';\n\n@inject('dictionariesStore')\n@observer\nexport class RandomMovieController extends React.Component {\n  render() {\n    const { dictionariesStore: { genres, getGenresIdsByNames, getGenresNamesByIds } } = this.props;\n    return (\n      <RandomMovie\n        genres={genres}\n        getGenresIdsByNames={getGenresIdsByNames}\n        getGenresNamesByIds={getGenresNamesByIds}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n// import Typography from '@material-ui/core/Typography';\nimport { Paper } from '@material-ui/core/';\nimport { withRouter, Link, Route } from 'react-router-dom';\nimport { NowPlaying } from '../Tabs/NowPlaying';\nimport { RandomMovie } from '../Tabs/RandomMovie';\n\n// function TabContainer(props) {\n//   return (\n//     <Typography component=\"div\" style={{ padding: 8 * 3 }}>\n//       {props.children}\n//     </Typography>\n//   );\n// }\n\nconst styles = {\n  paperContainer: {\n    backgroundColor: '#240B05',\n    padding: '10px',\n  },\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nconst routesToTabs = Object.freeze({\n  '/': 0,\n  '/random-movie': 1,\n});\n\nfunction ScrollableTabsButtonController({ location }) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(routesToTabs[location.pathname] || 0);\n\n  function handleChange(event, newValue) {\n    setValue(newValue);\n  }\n\n  return (\n    <div className={classes.root}>\n      <Paper style={styles.paperContainer} />\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          scrollButtons=\"auto\"\n          centered\n        >\n          <Tab label=\"В прокате\" component={Link} to=\"/\" />\n          <Tab label=\"Случайный фильм\" component={Link} to=\"/random-movie\" />\n        </Tabs>\n      </AppBar>\n      <Route exact path=\"/\" component={NowPlaying} />\n      <Route path=\"/random-movie\" component={RandomMovie} />\n    </div>\n  );\n}\n\nexport const ScrollableTabsButtonAuto = withRouter(ScrollableTabsButtonController);\n","import * as React from 'react';\nimport DevTools from 'mobx-react-devtools';\nimport { observer, inject } from 'mobx-react';\nimport { ScrollableTabsButtonAuto } from '../Header';\n\n@inject('moviesStore')\n@inject('dictionariesStore')\n@observer\nexport class App extends React.Component {\n  componentDidMount() {\n    const { dictionariesStore } = this.props;\n    dictionariesStore.fetchGenres();\n  }\n\n  render() {\n    return (\n      <>\n        <DevTools />\n        <ScrollableTabsButtonAuto />\n      </>\n    );\n  }\n}\n","import { observable, action } from 'mobx';\nimport {\n  sortBy, find, get, map,\n} from 'lodash';\nimport { getGenresList } from '../actions';\n\nclass DictionariesStore {\n  @observable genres;\n\n  constructor() {\n    this.genres = [];\n  }\n\n  @action fetchGenres = async () => {\n    const { genres: genresResponse } = await getGenresList();\n    this.setGenres(sortBy(genresResponse, ['name']) || []);\n  };\n\n  @action setGenres = (tmdbGenres) => {\n    this.genres = tmdbGenres;\n  };\n\n  @action getGenresIdsByNames = genresNames => map(genresNames, gName => get(find(this.genres, { name: gName }), 'id')).join(',');\n\n  @action getGenresNamesByIds = genresIds => map(genresIds, gId => get(find(this.genres, { id: gId }), 'name')).join(', ');\n}\n\nexport const dictionariesStore = new DictionariesStore();\n","import { observable, action } from 'mobx';\nimport { getNowPlaying } from '../actions';\n\nclass MoviesStore {\n  @observable nowPlayingMovies;\n\n  constructor() {\n    this.nowPlayingMovies = {};\n  }\n\n  @action getNowPlayingMovies = async (page = 1) => {\n    const movies = await getNowPlaying(page);\n    this.setNowPlayingMovies(movies);\n  };\n\n  @action setNowPlayingMovies = (nowPlaying) => {\n    this.nowPlayingMovies = nowPlaying;\n  };\n}\n\nexport const moviesStore = new MoviesStore();\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'mobx-react';\nimport { App } from './components/App';\nimport * as stores from './stores';\n\nReactDOM.render(\n  <Provider {...stores}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}